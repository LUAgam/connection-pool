#druid
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:8066/testdb?useSSL=false&serverTimezone=UTC&useUnicode=true&characterEncoding=utf8
spring.datasource.username=root
spring.datasource.password=123456
#最小连接池数量
spring.datasource.druid.min-idle=5
#最大连接池数量
spring.datasource.druid.max-active=20
#初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
spring.datasource.druid.initial-size=5
#获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
spring.datasource.druid.max-wait=6000
#有两个含义：
#1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。
#2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
spring.datasource.druid.time-between-eviction-runs-millis=6000
#连接保持空闲而不被驱逐的最小时间
spring.datasource.druid.min-evictable-idle-time-millis=600000
#连接保持空闲而不被驱逐的最大时间
spring.datasource.druid.max-evictable-idle-time-millis=900000
#用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
spring.datasource.druid.validation-query=select 1
#连接池中的minIdle数量以内的连接，空闲时间超过keep-alive-between-time-millis，则会执行keepAlive操作。
spring.datasource.druid.keep-alive=true
#keepAlive生效的时间
spring.datasource.druid.keep-alive-between-time-millis=600000
#建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.test-while-idle=true
#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.test-on-borrow=false
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.test-on-return=false
#配置监控统计拦截的filters(监控统计用的-filter:stat、日志用的-filter:log4j、防御sql注入的-filter:wall)
spring.datasource.druid.filters=stat,log4j,wall
#打开removeAbandoned功能
spring.datasource.druid.remove-abandoned=true
spring.datasource.druid.remove-abandoned-timeout=60
#关闭abanded连接时输出错误日志
spring.datasource.druid.log-abandoned=true
logging.level.root=debug







